{"version":3,"sources":["components/TodoItem.js","components/todosData.js","App.js","index.js"],"names":["TodoItem","props","className","type","checked","item","completed","onChange","handleChange","id","style","fontStyle","color","textDecoration","text","todosData","App","state","todos","bind","this","setState","prevState","map","todo","todoItems","key","Component","ReactDOM","render","document","getElementById"],"mappings":"sNAqBeA,MAnBf,SAAkBC,GAOd,OACI,yBAAKC,UAAU,aACX,2BACIC,KAAK,WACLC,QAASH,EAAMI,KAAKC,UACpBC,SAAU,kBAAMN,EAAMO,aAAaP,EAAMI,KAAKI,OAElD,uBAAGC,MAAOT,EAAMI,KAAKC,UAbN,CACnBK,UAAW,SACXC,MAAO,UACPC,eAAgB,gBAUqC,MAAOZ,EAAMI,KAAKS,QCYhEC,EA5BG,CACd,CACIN,GAAI,EACJK,KAAM,uBACNR,WAAW,GAEf,CACIG,GAAI,EACJK,KAAM,mBACNR,WAAW,GAEf,CACIG,GAAI,EACJK,KAAM,iBACNR,WAAW,GAEf,CACIG,GAAI,EACJK,KAAM,mBACNR,WAAW,GAEf,CACIG,GAAI,EACJK,KAAM,uBACNR,WAAW,ICeJU,E,kDAlCb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACTC,MAAOH,GAEX,EAAKP,aAAe,EAAKA,aAAaW,KAAlB,gBALR,E,yDASDV,GACXW,KAAKC,UAAS,SAAAC,GAOZ,MAAO,CACHJ,MAPiBI,EAAUJ,MAAMK,KAAI,SAAAC,GAIrC,OAHIA,EAAKf,KAAOA,IACZe,EAAKlB,WAAakB,EAAKlB,WAEpBkB,W,+BAQL,IAAD,OACDC,EAAYL,KAAKH,MAAMC,MAAMK,KAAI,SAAAlB,GAAI,OAAI,kBAAC,EAAD,CAAUqB,IAAKrB,EAAKI,GAAIJ,KAAMA,EAAMG,aAAc,EAAKA,kBAEtG,OACE,yBAAKN,UAAU,aACZuB,O,GA7BSE,aCGlBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.6aaa8dc8.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction TodoItem(props) {\r\n    const completedStyle = {\r\n        fontStyle: \"itakic\",\r\n        color: \"#cdcdcd\",\r\n        textDecoration: \"line-through\"\r\n    }\r\n\r\n    return (\r\n        <div className=\"todo-item\">\r\n            <input \r\n                type=\"checkbox\" \r\n                checked={props.item.completed}\r\n                onChange={() => props.handleChange(props.item.id)}\r\n            /> \r\n            <p style={props.item.completed ? completedStyle: null}>{props.item.text}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoItem","const todosData = [\r\n    {\r\n        id: 1,\r\n        text: \"To cook healthy food\",\r\n        completed: true\r\n    },\r\n    {\r\n        id: 2,\r\n        text: \"To go for a walk\",\r\n        completed: false\r\n    },\r\n    {\r\n        id: 3,\r\n        text: \"To read a book\",\r\n        completed: false\r\n    },\r\n    {\r\n        id: 4,\r\n        text: \"To bathe the cat\",\r\n        completed: true\r\n    },\r\n    {\r\n        id: 5,\r\n        text: \"To submit the report\",\r\n        completed: false\r\n    }\r\n]\r\n\r\nexport default todosData","import React, {Component} from 'react';\nimport TodoItem from \"./components/TodoItem\";\nimport todosData from \"./components/todosData\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n        todos: todosData\n    };\n    this.handleChange = this.handleChange.bind(this);\n\n  }\n\n  handleChange(id) {\n    this.setState(prevState => {\n      const updatedTodos = prevState.todos.map(todo => {\n          if (todo.id === id) {\n              todo.completed = !todo.completed;\n          }\n          return todo; \n      }); \n      return {\n          todos: updatedTodos\n      };\n    });\n  }\n  \n  render() {\n    const todoItems = this.state.todos.map(item => <TodoItem key={item.id} item={item} handleChange={this.handleChange}/>)\n\n    return (\n      <div className=\"todo-list\">\n        {todoItems}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport \"./index.css\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}